# change the default prefix key to C-q since we shouldn't need flow control
unbind-key C-b
set-option -g prefix C-q
bind-key C-q last-window

# ensure that our $TERM value specifies 256 colors
set-option -g default-terminal "screen-256color"

# start window indexing at one instead of zero
set-option -g base-index 1

# use vi-style key bindings in the status line, and copy/choice modes
set-option -g status-keys vi
set-window-option -g mode-keys vi

# attempt to set the window title
set-option -g set-titles on
set-option -g set-titles-string 'tmux on #H'

# use a large scrollback history
set-option -g history-limit 10000

# time in milliseconds to wait after an escape
set-option -g escape-time 10

# clear the scrollback history with <Ctrl-k>
bind-key C-k clear-history

# split more intutively with - (horizontal) and | (vertical)
unbind-key %
bind-key | split-window -h
unbind-key '"'
bind-key - split-window -v

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -1"

# bind key for synchronizing panes
bind-key t set-window-option synchronize-panes

# send the prefix to a nested client inside of the window
bind-key a send-prefix

# enter copy mode
bind y copy-mode
